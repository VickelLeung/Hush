{"ast":null,"code":"var _jsxFileName = \"/Users/vickelleung/Documents/projects/Hush/src/components/Card/PostCard.js\";\nimport React, { PureComponent } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { one } from \"../../images/backgroundImages\";\nimport bgImg from \"../../images/backgroundImages/motoki-tonn-vV1a1Leq-dQ-unsplash.jpg\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass PostCard extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      card: [],\n      picture: \"\",\n      comments: [],\n      username: \"\",\n      message: \"\"\n    };\n\n    this.generateRandomImage = () => {};\n\n    this.componentDidMount = () => {\n      this.getCard();\n    };\n\n    this.getCard = () => {\n      let id = this.props.match.params.id;\n      console.log(id);\n      axios.get('http://localhost:3001/post/love/' + id).then(result => {\n        let tempArr = result.data[0].comment;\n        console.log(\"s: \" + tempArr);\n        this.setState({\n          card: result.data,\n          comments: tempArr\n        });\n      });\n    };\n\n    this.postComment = () => {\n      let id = this.props.match.params.id;\n      let data = {\n        username: this.state.username,\n        message: this.state.message\n      };\n      axios.put('http://localhost:3001/post/love/comment/' + id, data).then(r => console.log(r.status)).catch(e => console.log(e)); //get comments\n\n      axios.get('http://localhost:3001/post/love/' + id).then(result => {\n        let tempArr = result.data[0].comment;\n        console.log(\"s: \" + tempArr);\n        this.setState({\n          comments: tempArr\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.card.map(item => {\n      return React.createElement(Card, {\n        style: {\n          padding: \"0 5%\"\n        },\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        color: \"textSecondary\",\n        component: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, item.title), React.createElement(Typography, {\n        variant: \"body2\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"from: \", item.user), React.createElement(Typography, {\n        color: \"textSecondary\",\n        component: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, item.date), React.createElement(Typography, {\n        color: \"textSecondary\",\n        component: \"h3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, item.description)));\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      style: {\n        margin: \"2% 0\"\n      },\n      label: \"Username\",\n      rows: \"4\",\n      variant: \"filled\",\n      required: true,\n      onChange: e => {\n        this.setState({\n          username: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      style: {\n        margin: \"2% 0\"\n      },\n      id: \"filled-multiline-static\",\n      label: \"Post a comment\",\n      multiline: true,\n      rows: \"4\",\n      variant: \"filled\",\n      required: true,\n      onChange: e => {\n        this.setState({\n          message: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Button, {\n      style: {\n        margin: \"2% 0\"\n      },\n      type: \"submit\",\n      onClick: this.postComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Submit\")), this.state.comments.map(item => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, item.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, item.message));\n    }));\n  }\n\n}\n\nexport { PostCard };\nconst Wrapper = styled.div`\n    text-align:center;\n    justify-content:center;\n    align-items:center;\n    border:2px solid black;\n    margin: 2% 15%;\n`;\nconst Form = styled.div`\n  display:flex;\n  flex-direction: column;\n  margin: 0 20%;\n`;","map":{"version":3,"sources":["/Users/vickelleung/Documents/projects/Hush/src/components/Card/PostCard.js"],"names":["React","PureComponent","Card","CardContent","Typography","styled","axios","one","bgImg","TextField","Button","PostCard","state","card","picture","comments","username","message","generateRandomImage","componentDidMount","getCard","id","props","match","params","console","log","get","then","result","tempArr","data","comment","setState","postComment","put","r","status","catch","e","render","map","item","padding","title","user","date","description","margin","target","value","Wrapper","div","Form"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport {one} from \"../../images/backgroundImages\";\nimport bgImg from \"../../images/backgroundImages/motoki-tonn-vV1a1Leq-dQ-unsplash.jpg\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass PostCard extends PureComponent{\n\n  state={\n    card: [],\n    picture: \"\",\n    comments:[],\n    username:\"\",\n    message:\"\"\n  }\n\n  generateRandomImage = () =>{\n    \n  }\n\n  componentDidMount=()=>{\n    this.getCard();\n  }\n  \n  getCard=()=>{\n    let id  = this.props.match.params.id;\n    console.log(id);\n    axios.get('http://localhost:3001/post/love/'+id)\n    .then((result)=>{\n    \n      let tempArr = result.data[0].comment;\n      console.log(\"s: \"+ tempArr);\n      this.setState({card: result.data, comments: tempArr })\n    });\n  }\n\n  postComment =()=>{\n    let id  = this.props.match.params.id;\n    let data ={username: this.state.username, message: this.state.message}\n    axios.put('http://localhost:3001/post/love/comment/'+id, data )\n    .then(r => console.log(r.status))\n    .catch(e => console.log(e));\n\n    //get comments\n    axios.get('http://localhost:3001/post/love/'+id)\n    .then((result)=>{\n    \n      let tempArr = result.data[0].comment;\n      console.log(\"s: \"+ tempArr);\n      this.setState({comments: tempArr });\n    });\n   \n  }\n\nrender(){\n\n    return(\n        <Wrapper >\n            {this.state.card.map((item)=>{\n            return <Card style={{padding: \"0 5%\"}} variant=\"outlined\">\n            <CardContent>\n              <Typography  color=\"textSecondary\" component=\"h3\">\n               {item.title}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\">\n                from: {item.user}\n              </Typography>\n              <Typography  color=\"textSecondary\" component=\"h3\">\n               {item.date}\n              </Typography>\n              <Typography  color=\"textSecondary\" component=\"h3\">\n               {item.description}\n              </Typography>\n            </CardContent>\n          </Card>\n            })}\n\n            <Form>\n            <TextField\n                style={{margin: \"2% 0\"}}\n                label=\"Username\"\n                rows=\"4\"\n                variant=\"filled\"\n                required\n                onChange={(e)=>{this.setState({username:e.target.value})}}\n              />\n              <TextField\n                style={{margin: \"2% 0\"}}\n                id=\"filled-multiline-static\"\n                label=\"Post a comment\"\n                multiline\n                rows=\"4\"\n                variant=\"filled\"\n                required\n                onChange={(e)=>{this.setState({message:e.target.value})}}\n              />\n              <Button style={{margin: \"2% 0\"}} type=\"submit\" onClick={this.postComment}>Submit</Button>\n            </Form>\n            \n            {/* Comment sections below */}\n\n            {this.state.comments.map((item)=>{\n              return <div>\n                <p>{item.username}</p>\n                <p>{item.message}</p>\n              </div>\n            })}\n        </Wrapper>\n    )\n }\n}\n\nexport {PostCard};\n\nconst Wrapper = styled.div`\n    text-align:center;\n    justify-content:center;\n    align-items:center;\n    border:2px solid black;\n    margin: 2% 15%;\n`;\nconst Form = styled.div`\n  display:flex;\n  flex-direction: column;\n  margin: 0 20%;\n`;"]},"metadata":{},"sourceType":"module"}